version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 20
    commands:
      # Navigate to the correct source directory and list its contents for debugging
      - cd $CODEBUILD_SRC_DIR
      - echo "Listing contents of the source directory:"
      - ls -la  # Debug: List directory contents to verify package.json exists
      - if [ ! -f package.json ]; then echo "package.json not found!"; exit 1; fi  # Check if package.json exists
      - npm install

  pre_build:
    commands:
      - echo "Starting build phase"
      - pwd  # Debug: Print working directory
      - ls -la  # Debug: List contents again to confirm package.json is still present

  build:
    commands:
      # Run the build process
      - npm run build
      # Create server.js to serve the static files after build
      - |
        cat << EOF > server.js
        const express = require('express');
        const path = require('path');
        const app = express();
        const PORT = process.env.PORT || 8080;

        app.use(express.static(path.join(__dirname, 'dist')));

        app.get('*', (req, res) => {
          res.sendFile(path.join(__dirname, 'dist', 'index.html'));
        });

        app.listen(PORT, () => {
          console.log(\`Server is running on port \${PORT}\`);
        });
        EOF
      # Update package.json to add the start script and express dependency
      - |
        node -e "
          const fs = require('fs');
          const pkg = JSON.parse(fs.readFileSync('package.json'));
          pkg.scripts.start = 'node server.js';
          pkg.dependencies = pkg.dependencies || {};
          pkg.dependencies.express = '^4.18.2';
          fs.writeFileSync('package.json', JSON.stringify(pkg, null, 2));
        "

  post_build:
    commands:
      - echo "Build completed successfully!"
      - ls -la  # Debug: List final directory contents to confirm everything is in place

artifacts:
  base-directory: $CODEBUILD_SRC_DIR/dist  # Output the build directory (dist)
  files:
    - '**/*'
  discard-paths: no
