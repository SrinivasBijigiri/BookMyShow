version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 20
    commands:
      # Echo the current directory contents to help verify the project structure
      - echo "Current directory contents:"
      - ls -la
      # Install dependencies in the correct directory
      - npm install

  pre_build:
    commands:
      - echo "Starting pre-build phase"
      - pwd
      - echo "Directory contents:"
      - ls -la  # Confirm that package.json exists in the current directory

  build:
    commands:
      - echo "Starting build phase"
      - npm run build  # Build the project
      # Create server.js for serving the static files
      - |
        cat << EOF > server.js
        const express = require('express');
        const path = require('path');
        const app = express();
        const PORT = process.env.PORT || 8080;

        app.use(express.static(path.join(__dirname, 'dist')));

        app.get('*', (req, res) => {
          res.sendFile(path.join(__dirname, 'dist', 'index.html'));
        });

        app.listen(PORT, () => {
          console.log(\`Server is running on port \${PORT}\`);
        });
        EOF
      # Update package.json for production (ensuring express is added)
      - |
        node -e "
          const fs = require('fs');
          const pkg = JSON.parse(fs.readFileSync('package.json'));
          pkg.scripts.start = 'node server.js';
          pkg.dependencies = pkg.dependencies || {};
          pkg.dependencies.express = '^4.18.2';
          fs.writeFileSync('package.json', JSON.stringify(pkg, null, 2));
        "
      - npm install # Install express after adding it to package.json

  post_build:
    commands:
      - echo "Build completed successfully!"
      - echo "Final directory contents:"
      - ls -la

artifacts:
  files:
    - '**/*'
  base-directory: '.'
  discard-paths: no
